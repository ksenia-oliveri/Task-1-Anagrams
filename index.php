
<?php 
function stringReverse($string): string { //Создаёт функцию и присвает ей тип string
    $strToArr = explode(' ', $string); // разбивает строку с аргументами на массив по пробелу
    $patternRegex = '^[a-zA-Z]+$'; // создает шаблон символов

    foreach($strToArr as &$word) { // создает основной цикл. обращается к элементу напрямую, имея возможность перезаписывать
        $chars = mb_str_split($word); // превращает отдельное слово(элемент массива) в массив
        $filtredChars = []; // пустой массив, куда будут записываться элементы, удовлетворяющие условию
      foreach(array_reverse($chars) as $char) { // массив второй вложенности. работает с перевернутым массивом
        if(mb_ereg_match($patternRegex, $char)) { // проверяет каждый элемен массива на соответсвие с шаблоном
            $filtredChars[] = $char; // если удовлетворяет условию, записывается в новый массив
        }
      }
       foreach($chars as &$char) { // второй массив второй вложенности. обращается к элементам напрямую, имея возможность перезаписывать
        if(!mb_ereg_match($patternRegex, $char)) { // проверяет условие на несответствие элемента с шаблоном
            continue; // при удовлетворении условию, пропускает его
        }
        $char = array_shift($filtredChars); /* перезаписывает значение текущего элемента на значение элемента, извлеченного 
                                            из массива filtredChars посредством функции array_shift  */
       }
       $word = implode('', $chars); // объединяет элементы массива в строку
    }
    return implode(' ', $strToArr);  // объединяет элементы массива в строку с раздилителем в виде пробела
    // и возвращает результат функции
    
}
